<!-- DEPENDE DE socket.ejs -->
<div id="product-app">
  <button
    type="button"
    class="d-none"
    id="callModalAddOrder"
    data-bs-toggle="modal" data-bs-target="#modalAddOrder"
    v-on:click="reset()"
  >Adicionar</button>

  <div class="modal bg-secondary py-5" tabindex="-1" role="dialog" id="modalAddOrder">
    <div class="modal-dialog modal-xl" role="document">
      <div class="modal-content rounded-6 shadow">
        <div class="modal-header border-bottom-0">
          <h5 class="modal-title">Adicionar novo pedido</h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
            id="closeModalAddOrder"
          ></button>
        </div>
        <div class="modal-body pt-4">
          <style>
            @media (max-width: 740px){
              #action-bar{
                flex-direction: column;
              }
              #action-bar > *{
                width: 100%;
                max-width: 100% !important;
              }
            }
          </style>
          <div class="mb-4" v-if="cartStep !== 'customer'">
            <nav class="d-flex justify-content-between align-items-center mb-4 px-2" style="gap: 1rem;" id="action-bar">
              <div class="row" style="flex: 1; max-width: 35rem;">
                <div class="col-12 col-sm-6 mb-2">
                  <input
                    type="text"
                    name="search"
                    class="form-control rounded-4"
                    placeholder="Pesquise por nome ou código"
                    v-model="filter.search"
                    required
                  />
                </div>
                <div class="col-12 col-sm-6 mb-2">
                  <select
                    class="form-select rounded-4"
                    aria-label="Categoria"
                    id="product-category"
                    v-model="filter.category"
                  >
                    <option value="">Todas Categorias</option>
                    <% data.productCategories.forEach(category => { %>
                      <option value="<%- category.id -%>"><%- category.name -%></option>
                    <% }) %>
                  </select>
                </div>
              </div>
              
            </nav>
            <% if(data.productCategories && data.productCategories.length > 0){ data.productCategories.forEach((category) => { %>
              <div class="bg-light p-4" v-if="!filter.category || filter.category === '<%- category.id -%>'">
                <strong><%- category.name -%></strong>
              </div>
              <div class="row mb-2" v-if="!filter.category || filter.category === '<%- category.id -%>'">
                <% category.products.forEach((product) => { %>
                  <div
                    class="col-12 col-md-6 hover-gray-100" style="cursor: pointer"
                    v-if="!filter.search || '<%- product.id -%>'.includes(filter.search) ||  '<%- product.name -%>'.includes(filter.search)"
                    v-on:click="addProduct('<%- product.id -%>')"
                  >
                    <div
                      class="border-bottom d-flex align-items-center justify-content-between text-muted rounded py-2 px-3"
                      style="height: 100%;"
                    >
                      <div class="d-flex flex-column" style="max-width: 70%;">
                        <span>
                          <b><%- product.id -%> -</b> <%- product.name -%>
                        </span>
                        <small class="text-muted opacity-50"><%- product.description -%></small>
                      </div>
                      <div class="m-2" style="
                        flex: 1;
                        height: 1px;
                        border: 1px dashed #0002;
                        border-top: 0;
                        border-left: 0;
                        border-right: 0;
                      "></div>
                      <span><%- product.price_formatted -%></span>
                    </div>
                  </div>
                <% }) %>
              </div>
            <% }) }else{ %>
              <div
                class="bg-light d-flex align-items-center justify-content-center text-center text-muted rounded py-4"
                style="height: 100%;"
              >
                Não há nenhuma categoria de produto cadastrada
              </div>
            <% } %>
          </div>
          <div v-if="cartStep === 'customer'">
            <form class="px-1" style="margin-bottom: -1rem" v-on:submit="submitOrder">
              <p class="lead">Preencha os dados do cliente para poder finalizar o pedido</p>
              <div class="row">
                <div class="col-6">
                  <div v-if="!cartResponses.includes('first-access')">
                    <div class="mb-3">
                      <label for="customer-name" class="form-label small" style="font-weight: 600;">Nome</label>
                      <input
                        type="text"
                        class="form-control rounded-4"
                        id="customer-name"
                        placeholder="Nome do cliente"
                        v-model="customer.name"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="customer-email" class="form-label small" style="font-weight: 600;">Email</label>
                      <input
                        type="email"
                        class="form-control rounded-4"
                        id="customer-email"
                        placeholder="Email do cliente"
                        v-model="customer.email"
                        required
                      />
                    </div>
                    <% if(data.devices && data.devices.length > 0){ %>
                      <div class="mb-3">
                        <label for="customer-device" class="form-label small" style="font-weight: 600;">Dispositivo (opcional)</label>
                        <select class="form-select rounded-4" id="customer-device" v-model="device_id">
                          <option value="">Não quero habilitar</option>
                          <% data.devices.forEach(device => { %>
                            <option value="<%- device.id -%>">Disposito #<%- device.id -%></option>
                          <% }) %>
                        </select>
                        <div class="form-text">ID do dispositivo de notificação, caso deseje habilitar.</div>
                      </div>
                    <% } %>
                  </div>
                  <div
                    v-if="cartResponses.includes('first-access')"
                    class="d-flex align-items-center justify-content-center text-center flex-column h-100"
                  >
                    <h3 class="text-success">Novo cliente cadastrado</h3>
                    <p class="text-muted">Informe a ele a senha de primeiro acesso:</p>

                    <strong
                      v-html="passwordForFirstAccess"
                      class="d-block p-3 bg-light border rounded-4 w-100"
                    ></strong>
                  </div>
                </div>
                <div class="col-6">
                  <h6>Resumo da Compra</h6>
                  <ul class="list-group" style="
                    max-height: calc(90vh - 3rem);
                    overflow-y: auto;
                  ">
                    <li v-for="(item,index) in cart" class="list-group-item border-0 hover-gray-100 px-1">
                      <label class="d-flex align-items-center justify-content-between">
                        <div class="d-flex flex-column">
                          <small class="text-muted"><b>{{item.id}} -</b> {{item.name}}</small>
                          <small class="text-muted" style="font-size: 12px;opacity: .7;">R$ {{ item.price * item.qtd }}</small>
                        </div>
                        <div class="d-flex align-items-center justify-content-between">
                          {{  item.qtd }}
                        </div>
                      </label>
                    </li>
                  </ul>
                  <div class="d-flex justify-content-between align-items-center text-muted mt-2 p-2 border-top" style="gap: 1rem">
                    <strong>Total</strong>
                    <span>R$ {{ cart.reduce((acc, curr) => acc + (curr.price * curr.qtd), 0) }}</span>
                  </div>
                </div>
              </div>
              <div class="row mt-3" v-if="!cartResponses.includes('done')">
                <div class="col-6">
                  <button
                    type="button"
                    class="btn btn-secondary w-100"
                    v-on:click="submitCart(false)"
                  >Voltar</button>
                </div>
                <div class="col-6"><button type="submit" class="btn btn-primary w-100">Finalizar</button></div>
              </div>
            </form>
          </div>
        </div>
        <div class="modal-footer flex-column border-top-0 pb-3">
          <%- include('./cart') -%>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  const formAddOrder = document.getElementById('form-add-order')
  if(formAddOrder) formAddOrder.addEventListener("submit", handleAddOrder);

  function handleAddOrder(e){
    if(e) e.preventDefault();
    if(!socket) return;

    const name = document.getElementById('order-name').value;
    if(!name){
      notify('error','Atribua um nome ao pedido')
      return;
    }

    addOrder(name)
  }
  function closeModalAddOrder(){
    const closeButton = document.querySelector('#modalAddOrder .btn-close')
    if(closeButton) closeButton.click();
  }

  const products = JSON.parse('<%- JSON.stringify(data.productCategories.reduce((accumulate, current) => { return [...accumulate, ...current.products] },[])) %>');

</script>
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14"></script>
<script>
  function callModalAddOrder(){
    const btn = document.getElementById('callModalAddOrder').click()
  }
  const app = new Vue({
    el: '#product-app',
    data: {
      filter: { search: '', category: '' },
      cartOpen: false,
      // select | confirm | customer
      cartStep: 'select',
      // first-access | done
      cartResponses: [],
      cart:[],
      customer: { name: '', email: '' },
      device_id: '',
      passwordForFirstAccess: ''
    },
    methods: {
      addProduct: function(id){
        const findedProduct = products.find((product) => {return product.id == id})
        if(!findedProduct){
          notify('error','mensagem erro')
          return;
        }
        const indexInCart = this.cart.findIndex((item) => item.id === findedProduct.id)
        if(indexInCart > -1){
          this.cart[indexInCart].qtd++
          return;
        }

        this.cart.push({
          ...findedProduct, 
          qtd: 1
        })
        this.cartOpen = true
      },
      canSubmitCart: function() {
        this.cartStep = 'confirm'
      },
      submitCart: function(close) {
        if(!close){
          this.cartStep = 'select'
          this.cartOpen = true
          this.passwordForFirstAccess = ''
          this.cartResponses = []
          return;
        }

        this.cartStep = 'customer'
        this.cartOpen = false
      },
      submitOrder: function(e){
        e.preventDefault()

        const total_price = this.cart.reduce((acc, curr) => acc + (curr.price * curr.qtd), 0)

        socket.emit('addOrder', {
          customer: this.customer,
          device_id: this.device_id  && !isNaN(Number(this.device_id)) ? Number(this.device_id) : undefined,
          queue_id,
          total_price,
          items: this.cart,
        }, (data) => {
          this.cartResponses = []
          if(data.data && data.data.passwordForFirstAccess){
            this.passwordForFirstAccess = data.data.passwordForFirstAccess

            this.cartResponses.push('first-access')
          }

          if(!data.result){
            notify('error', data.response)
            return;
          }

          if(!data.data || !data.data.order){
            console.log(data);

            notify('error', 'Houve um erro inesperado ao lidar com a resposta de criação')
            return;
          }

          this.cartResponses.push('done')

          notify('success', data.response)

          renderOrder(data.data.order)

          if(!this.cartResponses.includes('first-access')){
            this.close()
  
            document.getElementById('closeModalAddOrder')?.click()
          }
        })
      },
      close: function() { this.reset() },
      reset: function(){
        this.filter = { search: '', category: '' }
        this.cartOpen = false
        this.cartStep = 'select'
        this.cartResponses = []
        this.cart = []
        this.customer = { name: '', email: '' }
        this.device_id = ''
      },
      deleteItem: function(id){
        const index = this.cart.findIndex((item) => item.id === id)
        if(index === -1) return;

        this.cart.splice(index,1)
        if(this.cart.length === 0){
          this.cartOpen = false;
        }
      },
      handleSetItemQtd: function(item, event){
        const newValue = event.target.value
        console.log('[change-qtd]');
        if(Number(newValue) <= 0){
          console.log('[called-delete]')
          this.deleteItem(item.id)
        }
      }
    } 
  })
</script>

