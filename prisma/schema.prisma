// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String? @unique
  phone    String? @unique
  password String?
  type     String  @default("client")

  queues Queue[]
  orders Order[]

  @@map("users")
}

model Queue {
  id               Int       @id @default(autoincrement())
  is_autoincrement Boolean   @default(true)
  start_in         Int       @default(100)
  max_length       Int?
  is_open          Boolean   @default(true)
  started_at       DateTime
  ended_at         DateTime?
  user_id          Int

  user   User    @relation(fields: [user_id], references: [id])
  orders Order[]

  @@map("queues")
}

model Order {
  id          Int     @id @default(autoincrement())
  name        String
  total_price Decimal
  status      String
  queue_id    Int
  user_id     Int

  user  User  @relation(fields: [user_id], references: [id])
  queue Queue @relation(fields: [queue_id], references: [id])

  @@map("orders")
}

model ProductCategory {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  picture     String?

  products Product[]

  @@map("product_categories")
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  picture     String?
  sku         String?
  category_id Int
  price       Decimal

  category  ProductCategory @relation(fields: [category_id], references: [id])
  OrderItem OrderItem[]

  @@map("products")
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  product_id Int
  quantity   Int
  unit_price Decimal

  product Product @relation(fields: [product_id], references: [id])
}
